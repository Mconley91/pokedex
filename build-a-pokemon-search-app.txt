** start of undefined **

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Pokemon Search App huehueheueh</title>
    <link rel="stylesheet" href="styles.css">
  </head>
  <body>
    <main id="pokedex">
      <div id="search-container">
        <input id="search-input" placeholder="insert pokemon to lookup" required></input>
        <button id="search-button">Search</button>
      </div>
      <div id="readout">
        <img src="" id="sprite">
        <div>Name: <span id="pokemon-name"></span></div>
        <div>ID: <span id="pokemon-id"></span></div>
        <div>Weight: <span id="weight"></span></div>
        <div>Height: <span id="height"></span></div>
        <div>Types: 
          <span id="types">
            <span id="type1"></span>
            <span id="type2"></span>
          </span>
        </div>
        <div>HP: <span id="hp"></span></div>
        <div>Attack: <span id="attack"></span></div>
        <div>Defense: <span id="defense"></span></div>
        <div>SA: <span id="special-attack"></span></div>
        <div>SD: <span id="special-defense"></span></div>
        <div>Speed: <span id="speed"></span></div>
      </div>
      
    </main>
    <script src="script.js"></script>
  </body>
</html>

** end of undefined **

** start of undefined **

body{
  background-color: grey;
}
#pokedex {
  background-color: darkred;
  display:flex;
  flex-direction: column;
  width: 50%;
  margin: 100px auto auto auto;
  padding: 10px;
  align-items: center;
  border: rgb(90, 16, 16) 2px solid;
  border-radius: 25px;
}
#search-container {
  display: flex;
  flex-direction: column;
}
#readout {
  background-color: grey;
  width: 85%;
  height: 355px;
  border: solid lightgrey;
  border-radius: 25px;
  padding: 15px;
  display: flex;
  flex-direction: column;
  text-align: center;
}
#sprite{
  background-color: black;
  border-radius: 50%;
  width: 150px;
  height: 150px;
  align-self: center;
  padding: 0;
  margin: auto;
}

** end of undefined **

** start of undefined **

const inputElement = document.getElementById("search-input");
const searchButtonElement = document.getElementById("search-button");
const nameElement = document.getElementById("pokemon-name");
const idElement = document.getElementById("pokemon-id");
const weightElement = document.getElementById("weight");
const heightElement = document.getElementById("height");
const typesElement = document.getElementById("types");
const type1Element = document.getElementById("type1");
const type2Element = document.getElementById("type2");
const hpElement = document.getElementById("hp");
const attackElement = document.getElementById("attack");
const defenseElement = document.getElementById("defense");
const specialAttackElement = document.getElementById("special-attack");
const specialDefenseElement = document.getElementById("special-defense");
const speedElement = document.getElementById("speed");
const picture = document.getElementById("sprite");


searchButtonElement.addEventListener("click",async()=>{
  typesElement.appendChild(type2Element);
  nameElement.innerText = "";
  idElement.innerText = "";
  weightElement.innerText = ""; 
  heightElement.innerText = "";
  type1Element.innerText = "";
  type2Element.innerText = "";
  hpElement.innerText = "";
  attackElement.innerText = "";
  defenseElement.innerText = "";
  specialAttackElement.innerText = "";
  specialDefenseElement.innerText = "";
  speedElement.innerText = "";
  picture.src = "";
  const response = await fetch("https://pokeapi-proxy.freecodecamp.rocks/api/pokemon");
  const data = await response.json();
  const foundPokemon = data.results.find((i)=>i.name === inputElement.value.toLowerCase() || i.id === Number(inputElement.value));
  if (foundPokemon){
    nameElement.innerText = foundPokemon.name.charAt(0).toUpperCase()+ foundPokemon.name.slice(1);
    idElement.innerText = foundPokemon.id;
    const response2 = await fetch(`https://pokeapi-proxy.freecodecamp.rocks/api/pokemon/${foundPokemon.name}`);
    const data2 = await response2.json();
    weightElement.innerText = data2.weight; 
    heightElement.innerText = data2.height;
    type1Element.innerText = data2.types[0].type.name.toUpperCase();
    if(data2.types[1]){
      type2Element.innerText = data2.types[1].type.name.toUpperCase();
    }
    else {
      nameElement.appendChild(type2Element);
    };
    hpElement.innerText = data2.stats[0].base_stat;
    attackElement.innerText = data2.stats[1].base_stat;
    defenseElement.innerText = data2.stats[2].base_stat;
    specialAttackElement.innerText = data2.stats[3].base_stat;
    specialDefenseElement.innerText = data2.stats[4].base_stat;
    speedElement.innerText = data2.stats[5].base_stat;
    picture.src = data2.sprites.front_default;
    //console.log(foundPokemon, data2);
  }
  else {
    alert("Pok√©mon not found")
  }
  });

** end of undefined **

